<?php
/**
 * This file is part of the Global Trading Technologies Ltd workflow-extension-bundle package.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * (c) fduch <alex.medwedew@gmail.com>
 * @date 27.07.16
 */
declare(strict_types=1);

namespace Gtt\Bundle\WorkflowExtensionsBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use JMS\JobQueueBundle\Entity\Job;

/**
 * Persists information about scheduled transition (as jms Job) for specified workflow and subject
 * and allows to fetch it in order to manipulate or re-schedule
 * @see Job
 *
 * @ORM\Entity(repositoryClass = "Gtt\Bundle\WorkflowExtensionsBundle\Entity\Repository\ScheduledJobRepository")
 *
 * @ORM\Table(name = "gtt_workflow_scheduled_job")
 *
 * (c) fduch <alex.medwedew@gmail.com>
 */
class ScheduledJob
{
    /**
     * Autogenerated id
     *
     * @var int
     *
     * @ORM\Id
     * @ORM\GeneratedValue(strategy = "AUTO")
     * @ORM\Column(type = "integer", options = {"unsigned": true})
     */
    private $id;

    /**
     * Reschedulable or not
     *
     * @var boolean
     *
     * @ORM\Column(type = "boolean", columnDefinition="COMMENT 'Defines whether related job can be rescheduled or not'")
     */
    private $reschedulable = true;

    /**
     * Related jms Job to be executed later
     *
     * @var Job
     *
     * @ORM\OneToOne(targetEntity="JMS\JobQueueBundle\Entity\Job")
     * @ORM\JoinColumn(name="jms_job_id", referencedColumnName="id", nullable=false)
     */
    private $job;

    /**
     * ScheduledJob constructor.
     *
     * @param Job     $transitionTriggerJob transition trigger job
     * @param boolean $reschedulable        reschedulable or not
     */
    public function __construct(Job $transitionTriggerJob, bool $reschedulable = true)
    {
        $this->reschedulable = $reschedulable;
        $this->job           = $transitionTriggerJob;
    }


    /**
     * Returns id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Return true if scheduled job can be rescheduled
     *
     * @return boolean
     */
    public function isReschedulable(): bool
    {
        return $this->reschedulable;
    }

    /**
     * Sets reschedulable flag
     *
     * @param boolean $reschedulable
     */
    public function setReschedulable(bool $reschedulable = true): void
    {
        $this->reschedulable = $reschedulable;
    }

    /**
     * Returns Job
     *
     * @return Job
     */
    public function getJob(): Job
    {
        return $this->job;
    }

    /**
     * Sets Job
     *
     * @param Job $job Related jms job
     */
    public function setJob(Job $job): void
    {
        $this->job = $job;
    }
}
